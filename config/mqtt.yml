- sensor:
    unique_id: farm_temp
    name: "Farm Temp"
    state_topic: "jens/stream/dfrobot"
    unit_of_measurement: "C"
    expire_after: 360
    value_template: >-
      {% from 'mqtt_parser.jinja' import parse_stream %}
      {{ parse_stream(value,'tempair') }}

- sensor:
    unique_id: farm_humidity
    name: "Farm Humidity"
    state_topic: "jens/stream/dfrobot"
    unit_of_measurement: "humidity"
    expire_after: 360
    value_template: >-
      {% from 'mqtt_parser.jinja' import parse_stream %}
      {{ parse_stream(value,'humidity') }}

- sensor:
    unique_id: farm_light
    name: "Farm Light"
    state_topic: "jens/stream/dfrobot"
    unit_of_measurement: "lux"
    expire_after: 360
    value_template: >-
      {% from 'mqtt_parser.jinja' import parse_stream %}
      {{ parse_stream(value,'light') }}

- sensor:
    unique_id: farm_co2
    name: "Farm CO2"
    state_topic: "jens/stream/dfrobot"
    unit_of_measurement: "ppm"
    expire_after: 360
    value_template: >-
      {% from 'mqtt_parser.jinja' import parse_stream %}
      {{ parse_stream(value,'co2') }}

- sensor:
    unique_id: farm_flow
    name: "FARM FLOW"
    state_topic: "jens/stream/dfrobot"
    unit_of_measurement: "flow"
    expire_after: 360
    value_template: >-
      {% from 'mqtt_parser.jinja' import parse_stream %}
      {{ parse_stream(value,'flow') }}

# Additional Sensors
- sensor:
    unique_id: ew1_flow
    name: "EW1 FLOW"
    state_topic: "farm/ew1"
    unit_of_measurement: "flow"
    expire_after: 360
    value_template: >-
      {% from 'mqtt_parser.jinja' import parse_stream %}
      {{ parse_stream(value,'flow') }}

- sensor:
    unique_id: ew1_tempair
    name: "EW1 TEMPAIR"
    state_topic: "farm/ew1"
    unit_of_measurement: "C"
    expire_after: 360
    value_template: >-
      {% from 'mqtt_parser.jinja' import parse_stream %}
      {{ parse_stream(value,'tempair') }}

- sensor:
    unique_id: ew1_humidity
    name: "EW1 HUMIDITY"
    state_topic: "farm/ew1"
    unit_of_measurement: "%"
    expire_after: 360
    value_template: >-
      {% from 'mqtt_parser.jinja' import parse_stream %}
      {{ parse_stream(value,'humidity') }}

